netty server
ballerina service
jmeter
java executer threads

runner threads
worker threads
ballerina worker threads

jmeter send request and measure throughput and latency in the ballerina post 
service then use machine learning to set the fixed ballerina worker threads

implement a way to set the ballerina worker threads default is 100.

latency
99 percentile latency

=====================================
parameterization
thread dump
3 instances in the cluser
1 jmeter 2 ballerina 3 backend
jtl files each for 50 100 200 300 400 500
plot the graph average of tps latency 99% latency 90%  vs concurrency 50 100 200 300 400 500 not the distribution
====================================

threadpool size 4 8 10 50 100 500
byte size 50B 1024B 
2 use cases simple passthrogh >>>>>>>> h1_h1_passthrough 
and transformation >>>>>>>>>>>>>>  h1_transformation
6 concurrency 1 10 100 200 300 400 500

============================================

to download results form jmeter-client
scp wso2@192.168.32.8:~/jmeter/summary.csv ~/newResults/
scp ~/newResults/run-performance-tests.sh wso2@192.168.32.8:~/jmeter/

nohup ./jmeter/run-performance-tests.sh -m 4G -u 1 -u10 -u 100 -u 200 -u 300 -u 400 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_transformation_t4 -i h1_h1_passthrough_t4 -i h1_transformation_t8 -i h1_h1_passthrough_t8 -i h1_transformation_t10 -i h1_h1_passthrough_t10 -i h1_transformation_t50 -i h1_h1_passthrough_t50 -i h1_transformation_t100 -i h1_h1_passthrough_t100 -i h1_transformation_t500 -i h1_h1_passthrough_t500 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 1 -u10 -u 100 -u 200 -u 300 -u 400 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_h1_passthrough_t100 -i h1_transformation_t500 -i h1_h1_passthrough_t500 &

cd jmeter/
./create-summary-csv.sh -n ballerina -p ballerina -g gcviewer.jar -d ~/results

=====================================================
/usr/lib/ballerina/ballerina-0.991.0/bin/ballerina run -e b7a.runtime.scheduler.threadpoolsize=500 --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide 

ps aux | grep java
kill -9 24312^C
===================================================

192.168.32.4 setup-ballerina.sh -n 192.168.32.9 done
192.168.32.8 setup-jmeter-client-ballerina.sh  done
192.168.32.9 setup-netty.sh done
192.168.32.5 auto-tuning
=======================================

pandas to regex and create another column
==================================

npm run build
npm i
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/tool-plugins/vscode$ 
cd tool-plugins/vscode/
sudo ./gradlew clean build -x test -x check 
run withput sudo
sudo ./gradlew clean build -x test -x check --info
 sudo ./gradlew clean build -x test -x check --debug
ll
sudo ./gradlew clean build -x test -x check --rerun-tasks --no-build-cache
change node version as in github




aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang$ cd /home/aathmsn/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc/build
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc/build$ cd .
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc/build$ cd ..
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc$ rm -rf build
rm: cannot remove 'build/test-bir-temp/table_iteration-6564178458364016231': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_actions_test-2172736311449642874': Permission denied
rm: cannot remove 'build/test-bir-temp/connection_pool_test-8382483149931707533': Permission denied
rm: cannot remove 'build/test-bir-temp/connection_pool_test-6257574295926015420': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_connector_init_test-1110007983465632433': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_connector_init_test-4549382938870334726': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_actions_test-6391562513574450875': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_actions_test-4415346194419281313': Permission denied
rm: cannot remove 'build/test-bir-temp/table_iteration-1381020228676361337': Permission denied
rm: cannot remove 'build/test-bir-temp/sql_actions_negative_test-872950302180570371': Permission denied
rm: cannot remove 'build/test-results/test/binary/output.bin': Permission denied
rm: cannot remove 'build/test-results/test/binary/results.bin': Permission denied
rm: cannot remove 'build/test-results/test/binary/output.bin.idx': Permission denied
rm: cannot remove 'build/reports/tests/test/classes/org.ballerinax.jdbc.SQLActionsTest.html': Permission denied
rm: cannot remove 'build/reports/tests/test/classes/org.ballerinax.jdbc.SQLConnectorInitTest.html': Permission denied
rm: cannot remove 'build/reports/tests/test/classes/org.ballerinax.jdbc.table.TableIterationTest.html': Permission denied
rm: cannot remove 'build/reports/tests/test/classes/org.ballerinax.jdbc.SQLConnectionPoolTest.html': Permission denied
rm: cannot remove 'build/reports/tests/test/packages/org.ballerinax.jdbc.table.html': Permission denied
rm: cannot remove 'build/reports/tests/test/packages/org.ballerinax.jdbc.html': Permission denied
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc$ ll
total 368
drwxr-xr-x  5 aathmsn aathmsn   4096 Jul 12 16:35 ./
drwxr-xr-x 42 aathmsn aathmsn   4096 Jul 12 14:30 ../
drwxr-xr-x  2 aathmsn aathmsn   4096 Jul 12 14:30 assembly/
-rw-r--r--  1 aathmsn aathmsn   4532 Jul 12 14:30 build.gradle
-rw-r--r--  1 aathmsn aathmsn 103932 Jul 12 15:33 hs_err_pid27350.log
-rw-r--r--  1 aathmsn aathmsn 107297 Jul 12 15:33 hs_err_pid28330.log
-rw-r--r--  1 root    root    103856 Jul 12 15:40 hs_err_pid32153.log
-rw-r--r--  1 aathmsn aathmsn  18395 Jul 12 14:30 pom.xml
-rw-r--r--  1 aathmsn aathmsn   1024 Jul 12 14:30 spotbugs-exclude.xml
drwxr-xr-x  4 aathmsn aathmsn   4096 Jul 12 14:30 src/
drwxr-xr-x  2 aathmsn aathmsn   4096 Jul 12 15:56 target/
aathmsn@aathman:~/NewBallerinaCompilations/ballerina-lang/stdlib/jdbc$ 


mvn clean install -Dmaven.test.skip=true -Dcheckstyle.skip Dspotbugs.skip=true -Dpmd.skip=true -Dmaven.javadoc.skip=true -pl '!composer,!tool-plugins/vscode' -rf :benchmarks

mvn clean install -Dmaven.test.skip=true -Dcheckstyle.skip Dspotbugs.skip=true -Dpmd.skip=true -Dmaven.javadoc.skip=true -pl '!composer,!tool-plugins/vscode' 

==========================================================================
Build ballerina
==========================================================================

aathmsn@aathman:~/BuildingBallerina/ballerina-lang$ mvn clean install -Dmaven.test.skip=true -Dcheckstyle.skip -Dspotbugs.skip=true -Dpmd.skip=true -Dmaven.javadoc.skip=true -pl '!composer,!tool-plugins/vscode' 


/home/aathmsn/Downloads/Compressed/EditedThreadsize/ballerina-0.990.2-SNAPSHOT/bin/ballerina  run  --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide 


================================================================================
core and maximum pool sizes may also be changed dynamically using setCorePoolSize(int) and setMaximumPoolSize(int).
================================================================================

/home/aathmsn/Downloads/Compressed/Fullyparametrized/ballerina-0.990.2-SNAPSHOT/bin/ballerina run -e b7a.runtime.scheduler.corepoolsize=25 -e b7a.runtime.scheduler.maxpoolsize=200 -e b7a.runtime.scheduler.queuecapacity=2147483647 -e b7a.runtime.scheduler.queuetype=linked -e b7a.runtime.scheduler.keepalivetime=60  --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide 

nohup /usr/lib/ballerina/ballerina-0.991.0/bin/ballerina run --observe --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide > ballerina.log &

/usr/lib/ballerina/ballerina-0.991.0/bin/ballerina run --observe --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide

/usr/lib/jvm/jdk-12.0.1/bin/java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -classpath /home/aathmsn/IdeaProjects/MBean/out/production/MBean Gaming

==========================================
java -jar jolokia-jvm.jar start 5417


/home/aathmsn/Downloads/Compressed/Test/ballerina-0.990.2-SNAPSHOT/bin/ballerina run -e b7a.runtime.scheduler.corepoolsize=25 -e b7a.runtime.scheduler.maxpoolsize=200 -e b7a.runtime.scheduler.queuecapacity=2147483647 -e b7a.runtime.scheduler.queuetype=linked -e b7a.runtime.scheduler.keepalivetime=60  --observe --sourceroot "/home/aathmsn/IdeaProjects/Restful Services" guide 

====================================================

t4 50 100 500
users 10 100 200 300 400 500 
1min querying

Ballerina server
================================================
/bin/bash /usr/bin/ballerina run -e b7a.runtime.scheduler.threadpoolsize=4 --observe ~/ballerina/bal/h1_h1_passthrough.balx
===================================================
http_requests_total_value{protocol="http",http_method="POST",resource="transform",http_url="/transform",service="transformationService$$service$0",}

http_requests_total_value{protocol="http",http_method="POST",service="passthroughService$$service$0",http_url="/passthrough",resource="passthrough",}

./jmeter/run-performance-tests.sh -m 4G -u 1 -u10 -u 100 -u 200 -u 300 -u 400 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_transformation_t4 -i h1_h1_passthrough_t4 -i h1_transformation_t50 -i h1_h1_passthrough_t50 -i h1_transformation_t100 -i h1_h1_passthrough_t100 -i h1_transformation_t500 -i h1_h1_passthrough_t500 

ps -ef to get all process

./jmeter/run-performance-tests.sh -m 4G -u 250 -u 500 -b 50 -s 0 -d 1500 -w 300 -i h1_transformation_t100 -i h1_h1_passthrough_t100 

run the tests and get the 20th 1 minute(timeWindow=60000) mean ,stdDev throughput and compare with jmeter.

pkill -f checkrequest.py

scp wso2@192.168.32.4:~/15* ~/prometheusResults/

===================================================================
use alpha ballerina and do all the tests first.
change netty backend to ballerina and change the threadpool of both and get the results

./gradlew build -x test -x check -x composer-library:npmInstall -x composer-library:npmBuild

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_h1_passthrough_b10_e10 -i h1_h1_passthrough_b10_e100 -i h1_h1_passthrough_b100_e10 -i h1_h1_passthrough_b100_e10 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_transformation_b10_e10 -i h1_transformation_b10_e100 -i h1_transformation_b100_e10 -i h1_transformation_b100_e10 &

=======================================================================
do the prime tests for 521,10007,100003,10000019

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i ballerina_prime_server_521_no_echo_server -i ballerina_prime_server_10007_no_echo_server -i ballerina_prime_server_100003_no_echo_server -i ballerina_prime_server_10000019_no_echo_server -i h1_transformation_b10_e10 -i h1_transformation_b10_e100 -i h1_transformation_b100_e10 -i h1_transformation_b100_e10 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i ballerina_prime_server_521_no_echo_server -i ballerina_prime_server_10007_no_echo_server -i ballerina_prime_server_100003_no_echo_server -i ballerina_prime_server_10000019_no_echo_server &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i ballerina_prime_server_521_no_echo_server_t10 -i ballerina_prime_server_10007_no_echo_server_t10 -i ballerina_prime_server_100003_no_echo_server_t10 -i ballerina_prime_server_10000019_no_echo_server_t10 -i ballerina_prime_server_521_no_echo_server_t100 -i ballerina_prime_server_10007_no_echo_server_t100 -i ballerina_prime_server_100003_no_echo_server_t100 -i ballerina_prime_server_10000019_no_echo_server_t100 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i ballerina_prime_521_passthrough_t10_ballerina_prime_echo_t10 -i ballerina_prime_521_passthrough_t100_ballerina_prime_echo_t10 -i ballerina_prime_521_passthrough_t10_ballerina_prime_echo_t100 -i ballerina_prime_521_passthrough_t100_ballerina_prime_echo_t100 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i ballerina_prime_521_passthrough_t10_ballerina_prime_echo_t10 -i ballerina_prime_521_passthrough_t100_ballerina_prime_echo_t10 -i ballerina_prime_521_passthrough_t10_ballerina_prime_echo_t100 -i ballerina_prime_521_passthrough_t100_ballerina_prime_echo_t100 -i ballerina_prime_10007_passthrough_t10_ballerina_prime_echo_t10 -i ballerina_prime_10007_passthrough_t100_ballerina_prime_echo_t10 -i ballerina_prime_10007_passthrough_t10_ballerina_prime_echo_t100 -i ballerina_prime_10007_passthrough_t100_ballerina_prime_echo_t100 -i ballerina_prime_100003_passthrough_t10_ballerina_prime_echo_t10 -i ballerina_prime_100003_passthrough_t100_ballerina_prime_echo_t10 -i ballerina_prime_100003_passthrough_t10_ballerina_prime_echo_t100 -i ballerina_prime_100003_passthrough_t100_ballerina_prime_echo_t100 -i ballerina_prime_10000019_passthrough_t10_ballerina_prime_echo_t10 -i ballerina_prime_10000019_passthrough_t100_ballerina_prime_echo_t10 -i ballerina_prime_10000019_passthrough_t10_ballerina_prime_echo_t100 -i ballerina_prime_10000019_passthrough_t100_ballerina_prime_echo_t100 &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1_h1_passthrough_b10_e10_alpha -i h1_h1_passthrough_b10_e100_alpha -i h1_h1_passthrough_b100_e10_alpha -i h1_h1_passthrough_b100_e100_alpha &

=======================================================================
current problems with baysian optimization
1) oscillating in the local minima
2) context change

===========================================================================

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1c_h1c_passthrough_default_alpha -i ballerina_prime_server_521_no_echo_server_alpha -i ballerina_prime_server_10007_no_echo_server_alpha -i ballerina_prime_server_100003_no_echo_server_alpha -i ballerina_prime_server_10000019_no_echo_server_alpha &

=========================================================================
fligh record with 500concurrency echo service.
5 min jfr measure
run for 10 min

==========================================================================

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1c_h1c_passthrough_default_alpha_netty &

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -u 250 -u 500 -b 50 -b 1024 -s 0 -d 300 -w 120 -i h1c_h1c_passthrough_default_alpha_t100_netty &

=======================================
allocation tests
jfr
====================================
export FLAMEGRAPH_DIR=~/Downloads/FlameGraph/
./create_flamegraph.sh -f ~/ballerina/bal/recording100.jfr -i > flamegraph100.svg
./create_flamegraph.sh -e allocation-tlab -f ~/ballerina/bal/recording100.jfr -i > flamegraph100_allocation.svg


nohup jcmd $(pgrep -f h1c) JFR.start delay=20s duration=300s name=Test filename=recordingtest.jfr settings=profile &

========================================

nohup ./jmeter/run-performance-tests.sh -m 4G -u 500 -b 1024 -s 0 -d 300 -w 120 -i h1c_h1c_passthrough_default_alpha_netty_jfr &

================================================
Problems
1) jfr can work with jar only not with bal file
2) jar can work with java 8 only
3) open jdk 8 doesn't have jfr
solution use oracle jdk8

==========================================================
change the internal jdk of 1.0.0 by changeing /usr/lib/1.0.0/jballerina/bin/ballerina.sh and set JAVA_PATH to oracle jdk8
=========================================================

nohup ./jmeter/run-performance-tests.sh -m 4G -u 500 -b 1024 -s 0 -d 300 -w 120 -i h1c_h1c_passthrough_default_1.0.0_netty &

==========================================================
Checkout the patch in the 9 jfr flight recording branch if you have error running jar tests it is due to pkill -f h1
git checkout 3ba9fd5c287b508818a50b218b578a3706f58f1b 
============================================================

nohup ./jmeter/run-performance-tests.sh -m 4G -u 100 -b 50 -s 0 -d 600 -w 120 -i h1c_h1c_passthrough_default_1.0.0_netty &

-XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=delay=20s,duration=600s,name=Test,filename=recording991.jfr,settings=profile 

export JAVA_OPTS="-XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:StartFlightRecording=delay=20s,duration=600s,name=Test,filename=recording100.jfr,settings=profile" 


=================================================================
Combining everything
===============================================

java -jar ~/LocalBuildBallerinaPerformanceTest/performanceCommon/performance-common/components/netty-http-echo-service/target/netty-http-echo-service-0.3.1-SNAPSHOT.jar 

/home/aathmsn/Downloads/Compressed/Test/ballerina-0.990.2-SNAPSHOT/bin/ballerina run -e b7a.runtime.scheduler.corepoolsize=25 -e b7a.runtime.scheduler.maxpoolsize=200 -e b7a.runtime.scheduler.queuetype=default-linked -e b7a.runtime.scheduler.keepalivetime=10 --observe ~/LocalBuildBallerinaPerformanceTest/extracted\ from\ the\ zip/ballerina/bal/h1c_h1c_passthrough.bal

cd ~/Downloads/apache-jmeter-5.1.1/bin
./jmeter -n -t SequentialTest.jmx 

sleep 20 

cd ~/IdeaProjects/netty-performace-tuning/
python bayesian_both.py 

===========================================================
-(1) t100 java -jar -> summary.csv
-(2) t10 t100 java -jar -> JFR,Flamegraph 
(3) t10 java -jar decrease the contention threshhold -> JFR only
===========================================================

edit the ballerina-0.992-SNAPSHOT/bin/ballerina file and set JAVA_HOME="/usr/java/jdk1.8.0_211-amd64" in the top
to fix JAVA_HOME not set

netty server ballerina-echo.bal didn't work becasue I uploaded the wrong ballerina SNAPSHOT.
correct one is under Test folder Fullyparameterized folder is wrong
=========================================================

 curl -d '{"size":"50B","payload":["0123456789","ABCDEFGH"]}' -H "Content-Type: application/json" -X POST http://127.0.0.1:8688/service/EchoService

==========================================================
auto tune
1) prime and echo one server 
2) netty prime
==========================================================
Problem
When setting core pool size to a lower value than before it didn't drop to that value.
But, dropped a little according to keep alive time.

Solution
set both corepool and max to a lower value
Then it will suddenly drop.
==============================================================

============================================================
Remote jmx jconsole

JAVA_OPTS+=" -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=12345 -Dcom.sun.management.jmxremote.rmi.port=12345 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false -Djava.rmi.server.hostname=localhost"

jconsole localhost:12345

ssh -L 12345:localhost:12345 wso2@192.168.32.4

============================================================